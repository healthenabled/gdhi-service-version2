name: Deployment to Showcase and Production

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Build Number'
        default: '0'
        required: true
        type: string

jobs:
  set-build-number:
    runs-on: ubuntu-latest
    steps:
      - name: Display the build number
        run: echo gdhi-service-2.0${{ inputs.name }}.jar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set the build number for GDHI-Frontend in AWS parameter store
        run: aws ssm put-parameter --name "buildNumberForApp" --value gdhi-service-2.0${{ inputs.name }} --overwrite

  run-automation-testsuite:
    runs-on: ubuntu-latest
    needs: [ set-build-number ]
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Check out code from gdhi-automation-version2
        uses: actions/checkout@v3
        with:
          repository: healthenabled/gdhi-automation-version2
          ref: "master"
          path: gdhi-automation-version2

      - name: grant permissions
        working-directory: gdhi-automation-version2
        run: chmod +x gradlew

      - name: Install curl
        run: sudo apt install curl

      - name: Install Gauge
        run: curl -SsL https://downloads.gauge.org/stable | sh

      - name: Run test suite for backend
        working-directory: gdhi-automation-version2
        run: ./gradlew clean gauge -Ptags='api'
        continue-on-error: false

  deploy-to-showcase:
    runs-on: ubuntu-latest
    environment: SHOWCASE
    needs: [ run-automation-testsuite ]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/GDHI-60'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create CodeDeploy Deployment for Showcase
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.AWS_APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.AWS_SHOWCASE_DEPLOYMENT_GROUP }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --ignore-application-stop-failures

  deploy-to-prod:
    runs-on: ubuntu-latest
    environment: PROD
    needs: [ deploy-to-showcase ]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/GDHI-60'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create CodeDeploy Deployment to Prod
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.AWS_APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.AWS_PROD_DEPLOYMENT_GROUP }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --ignore-application-stop-failures